#   (c) Copyright 2014-2017 Hewlett-Packard Enterprise Development Company, L.P.
#   All rights reserved. This program and the accompanying materials
#   are made available under the terms of the Apache License v2.0 which accompany this distribution.
#
#   The Apache License is available at
#   http://www.apache.org/licenses/LICENSE-2.0
#
########################################################################################################################
testSubstringEndSuccess:
  inputs:
    - origin_string: 'good morning'
    - end_index: "4"
  description: "Tests that substring.sl operation finishes with result = 'good'"
  testFlowPath: io.cloudslang.base.strings.substring
  outputs:
    - new_string: good
  result: SUCCESS

testSubstringEndSuccessNoEndIndex:
  inputs:
    - origin_string: 'good morning'
    - begin_index: "5"
  description: "Tests that substring.sl operation finishes with result = 'morning'"
  testFlowPath: io.cloudslang.base.strings.substring
  outputs:
    - new_string: morning
  result: SUCCESS

testSubstringSuccess:
  inputs:
    - origin_string: 'mmmSPAMmmm'
    - begin_index: "3"
    - end_index: "7"
  description: "Tests that substring.sl operation finishes with result = 'SPAM'"
  testFlowPath: io.cloudslang.base.strings.substring
  outputs:
    - new_string: SPAM
  result: SUCCESS

testSubstringFailure:
  inputs:
    - origin_string: 'mmmSPAMmmm'
    - begin_index: "3"
    - end_index: "12"
  description: "Tests that substring.sl operation finishes with error_message = Indexes must be - begin_index < 10, end_index <=  10"
  testFlowPath: io.cloudslang.base.strings.substring
  outputs:
    - error_message: Indexes must be - begin_index < 10, end_index <= 10
  result: FAILURE

testSubstringWithoutProvidingSomeInputs:
  inputs:
    - origin_string: 'mmmSPAMmmm'
  description: "Tests that substring.sl operation finishes with result = mmmSPAMmmm"
  testFlowPath: io.cloudslang.base.strings.substring
  outputs:
    - new_string: mmmSPAMmmm
    - error_message: ""
  result: SUCCESS

testSubstringInvalidNegativeInputs:
  inputs:
    - origin_string: 'mmmSPAMmmm'
    - begin_index: "-100"
    - end_index: "-5"
  description: "Tests that substring.sl operation will fail and will finish with a meaningful message when a negative value is given."
  testFlowPath: io.cloudslang.base.strings.substring
  outputs:
    - error_message: "Indexes must be positive integers"
  result: FAILURE

testSubstringUsingInvalidIndex:
  inputs:
    - origin_string: 'test'
    - begin_index: "d"
    - end_index: "2"
  description: "Tests that substring.sl operation will fail and will finish with a meaningful message when invalid values are given"
  testFlowPath: io.cloudslang.base.strings.substring
  outputs:
    - error_message: "Invalid values"
  result: FAILURE

testRequiredInputMissing:
  inputs:
    - begin_index: "5"
    - end_index: "11"
  description: "Tests that substring.sl operation throws an exception when a required input is missing"
  testFlowPath: io.cloudslang.base.strings.substring
  throwsException: true

testSubstringUsingWhitespace:
  inputs:
    - origin_string: 'good morning'
    - begin_index: "1"
    - end_index: "5"
  description: "Tests that substring.sl operation finishes with result = 'ood'"
  testFlowPath: io.cloudslang.base.strings.substring
  outputs:
    - new_string: 'ood '
  result: SUCCESS

testSubstringWithEndIndexLikeDefault:
  inputs:
    - origin_string: ' mmSPAMmmm'
    - begin_index: "3"
    - end_index: "0"
  description: "Tests thet substring.sl operation finishes with result= SPAMmmm"
  testFlowPath: io.cloudslang.base.strings.substring
  outputs:
    - new_string: 'SPAMmmm'
  result: SUCCESS

testSubstringSuccessTestDefaultValues:
  inputs:
    - origin_string: 'mmmSPAMmmm'
    - begin_Index: "0"
    - end_Index: "0"
  description: "Tests that substring.sl operation finishes with result = 'SPAM'"
  testFlowPath: io.cloudslang.base.strings.substring
  outputs:
    - new_string: mmmSPAMmmm
  result: SUCCESS

testSubstringNegativeInputs:
  inputs:
    - origin_string: 'mmmSPAMmmm'
    - begin_index: "1"
    - end_index: "-2"
  description: "Tests that substring.sl operation fails and finishes with a meaningful message when a negative value is given."
  testFlowPath: io.cloudslang.base.strings.substring
  outputs:
    - error_message: "Indexes must be positive integers"
  result: FAILURE

testSubstringNegativeValues:
  inputs:
    - origin_string: 'mmmSPAMmmm'
    - begin_index: "-5"
    - end_index: "-2"
  description: "Tests that substring.sl operation will fail and will finish with a meaningful message when a negative value is given."
  testFlowPath: io.cloudslang.base.strings.substring
  outputs:
    - error_message: "Indexes must be positive integers"
  result: FAILURE

testSubstringInputs:
  inputs:
    - origin_string: 'mmmSPAMmmm'
    - begin_index: "9"
    - end_index: "10"
  description: "Tests that substring.sl operation finishes with result 'm'"
  testFlowPath: io.cloudslang.base.strings.substring
  outputs:
    - new_string: 'm'
  result: SUCCESS

testSubstringInputsBoundaryLimits:
  inputs:
    - origin_string: 'mmmSPAMmmm'
    - begin_index: "0"
    - end_index: "1"
  description: "Tests that substring.sl operation finishes with result 'm'"
  testFlowPath: io.cloudslang.base.strings.substring
  outputs:
    - new_string: 'm'
  result: SUCCESS

testBeginIndexAndEndIndexGreaterThanMaxIndex:
  inputs:
    - origin_string: 'mmmSPAMmmm'
    - begin_index: "11"
    - end_index: "11"
  description: "Tests that substring.sl operation fail when values out of range are given"
  testFlowPath: io.cloudslang.base.strings.substring
  outputs:
    - error_message: "Indexes must be - begin_index < 10, end_index <= 10"
  result: FAILURE

testBeginIndexNegativeValues:
  inputs:
    - origin_string: 'mmmSPAMmmm'
    - begin_index: "-5"
    - end_index: "10"
  description: "Tests that substring.sl operation finishes with error_message = Indexes must be positive integers"
  testFlowPath: io.cloudslang.base.strings.substring
  outputs:
    - error_message: "Indexes must be positive integers"
  result: FAILURE

testNegativeValues:
  inputs:
    - origin_string: 'mmmSPAMmmm'
    - begin_index: "-5"
    - end_index: "-1"
  description: "Tests that substring.sl operation finishes with error_message = Indexes must be positive integers"
  testFlowPath: io.cloudslang.base.strings.substring
  outputs:
    - error_message: 'Indexes must be positive integers'
  result: FAILURE

testInvalidNegativeValues:
  inputs:
    - origin_string: 'mmmSPAMmmm'
    - begin_index: "-5"
    - end_index: "-6"
  description: "Tests that substring.sl operation finishes with error_message = Indexes must be positive integers"
  testFlowPath: io.cloudslang.base.strings.substring
  outputs:
    - error_message: "Indexes must be positive integers"
  result: FAILURE

testBeginIndexGreatherThanEndIndex:
  inputs:
    - origin_string: 'mmmSPAMmmm'
    - begin_index: "7"
    - end_index: "6"
  description: "Tests that substring.sl operation finishes with error_message = Indexes must be - end_index > begin_index"
  testFlowPath: io.cloudslang.base.strings.substring
  outputs:
    - error_message: "Indexes must be - end_index > begin_index"
  result: FAILURE

testBeginIndexEndIndex:
  inputs:
    - origin_string: 'mmmSPAMmmm'
    - begin_index: "0"
    - end_index: "3"
  description: "Tests that substring.sl operation finishes with success."
  testFlowPath: io.cloudslang.base.strings.substring
  outputs:
    - new_string: 'mmm'
  result: SUCCESS

testBeginIndex2:
  inputs:
    - origin_string: 'mmmSPAMmmm'
    - begin_index: "10"
    - end_index: "11"
  description: "Tests that substring.sl operation finishes with error_message =   Indexes must be - begin_index < 10, end_index <= 10"
  testFlowPath: io.cloudslang.base.strings.substring
  outputs:
    - error_message: "Indexes must be - begin_index < 10, end_index <= 10"
  result: FAILURE

testBeginIndex:
  inputs:
    - origin_string: 'mmmSPAMmmm'
    - begin_index: "11"
    - end_index: "12"
  description: "Tests that substring.sl operation finishes with error_message = Indexes must be - begin_index < 10, end_index <= 10"
  testFlowPath: io.cloudslang.base.strings.substring
  outputs:
    - error_message: "Indexes must be - begin_index < 10, end_index <= 10"
  result: FAILURE

testSubstringUsingWhithespaces1:
  inputs:
    - origin_string: '          '
    - begin_index: "4"
    - end_index: "9"
  description: "Tests that substring.sl operation finishes with success."
  testFlowPath: io.cloudslang.base.strings.substring
  outputs:
    - new_string: '     '
  result: SUCCESS

testinvalid negInputs:
  inputs:
    - origin_string: 'mmmSPAMmmm'
    - begin_index: "7"
    - end_index: "-5"
  description: "Tests that substring.sl operation finishes with error_message: Indexes must be positive integers"
  testFlowPath: io.cloudslang.base.strings.substring
  outputs:
    - error_message: "Indexes must be positive integers"
  result: FAILURE

testSubstring:
  inputs:
    - origin_string: 'mmmSPAMmmm'
    - begin_index: "6"
    - end_index: "7"
  description: "Tests that substring.sl operation finishes with new_string = 'M'"
  testFlowPath: io.cloudslang.base.strings.substring
  outputs:
    - new_string: 'M'
  result: SUCCESS

testSubstringabcd:
  inputs:
    - origin_string: 'mmmSPAMmmm'
    - begin_index: "a"
    - end_index: "9"
  description: "Tests that substring.sl operation fails when invalid inputs are given."
  testFlowPath: io.cloudslang.base.strings.substring
  outputs:
    - error_message: 'Invalid values'
  result: FAILURE

testSubstringUsingOneCharacter:
  inputs:
    - origin_string: 'a'
    - begin_index: "0"
    - end_index: "1"
  description: "Tests that substring.sl operation finishes with success."
  testFlowPath: io.cloudslang.base.strings.substring
  outputs:
    - new_string: 'a'
  result: SUCCESS

testSubstringUsingJapaneseCharacters:
  inputs:
    - origin_string: '目は脂肪供えを取得失います。冬の缶実際の文字は、方法の変'
    - begin_index: "1"
    - end_index: "4"
  description: "Tests that substring.sl operation finishes with success using japanese characters."
  testFlowPath: io.cloudslang.base.strings.substring
  outputs:
    - new_string: 'は脂肪'
  result: SUCCESS

