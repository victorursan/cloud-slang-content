#   (c) Copyright 2014-2017 Hewlett-Packard Enterprise Development Company, L.P.
#   All rights reserved. This program and the accompanying materials
#   are made available under the terms of the Apache License v2.0 which accompany this distribution.
#
#   The Apache License is available at
#   http://www.apache.org/licenses/LICENSE-2.0
#
########################################################################################################################

#tests here fail when running from a different place that content repo root

testMoveSuccess:
  inputs:
    - move_source: willbecreated.txt
    - move_destination: moved.txt
  description: Tests that move.sl finishes with SUCCESS when inputs are valid file paths
  testFlowPath: io.cloudslang.base.filesystem.test_move
  result: SUCCESS

testMoveFailureWithSourceFileInexistent:
  inputs:
    - source: inexistent.txt
    - destination: willnotbemoved.txt
  description: Tests that move.sl finishes with FAILURE when move_source leads to an inexistent file
  testFlowPath: io.cloudslang.base.filesystem.move
  result: FAILURE

testMoveFailureWithDestinationFileIncorrect:
  inputs:
    - move_source: willbecreated.txt
    - move_destination: abc/REA2.md
  description: Tests that move.sl finishes with FAILURE when move_destination contains unwanted characters
  testFlowPath: io.cloudslang.base.filesystem.test_move
  result: FAILURE

testMoveMissingInputs:
  description: Tests that move.sl throws an exception when there are missing inputs
  testFlowPath: io.cloudslang.base.filesystem.test_move
  throwsException: true

testMoveFolderSuccess:
  inputs:
    - move_source: foldertobecreated
    - move_destination: folderwillbemoved
  description: Tests that move.sl finishes with SUCCESS when inputs are valid folder paths
  testFlowPath: io.cloudslang.base.filesystem.test_move
  result: SUCCESS

testMoveFolderFailureWithSourceFolderPathInexistent:
  inputs:
    - source: inexistentfolder
    - destination: willnotbemoved
  description: Tests that move.sl finishes with FAILURE when when move_source leads to an inexistent folder
  testFlowPath: io.cloudslang.base.filesystem.move
  result: FAILURE

testMoveFolderFailureWithDestinationFolderPathInexistent:
  inputs:
    - move_source: inexistentfolder
    - move_destination: \0**/D
  description: Tests that move.sl finishes with FAILURE when when move_destination contains unwanted characters
  testFlowPath: io.cloudslang.base.filesystem.test_move
  result: FAILURE